# JMH version: 1.35
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+7-LTS
# VM invoker: /home/heckej/.sdkman/candidates/java/17.0.3.fx-librca/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: test.MyBenchmark.closure13FreeVariables3MillionCalls

# Run progress: 0,00% complete, ETA 00:41:40
# Fork: 1 of 5
# Warmup Iteration   1: 41,244 ops/s
# Warmup Iteration   2: 42,755 ops/s
# Warmup Iteration   3: 41,246 ops/s
# Warmup Iteration   4: 41,288 ops/s
# Warmup Iteration   5: 42,355 ops/s
Iteration   1: 40,566 ops/s
Iteration   2: 42,034 ops/s
Iteration   3: 41,494 ops/s
Iteration   4: 42,386 ops/s
Iteration   5: 42,205 ops/s

# Run progress: 4,00% complete, ETA 00:40:12
# Fork: 2 of 5
# Warmup Iteration   1: 40,868 ops/s
# Warmup Iteration   2: 42,396 ops/s
# Warmup Iteration   3: 42,761 ops/s
# Warmup Iteration   4: 42,866 ops/s
# Warmup Iteration   5: 42,708 ops/s
Iteration   1: 42,606 ops/s
Iteration   2: 42,492 ops/s
Iteration   3: 41,789 ops/s
Iteration   4: 41,065 ops/s
Iteration   5: 42,154 ops/s

# Run progress: 8,00% complete, ETA 00:38:31
# Fork: 3 of 5
# Warmup Iteration   1: 42,019 ops/s
# Warmup Iteration   2: 40,614 ops/s
# Warmup Iteration   3: 41,959 ops/s
# Warmup Iteration   4: 40,552 ops/s
# Warmup Iteration   5: 40,492 ops/s
Iteration   1: 42,539 ops/s
Iteration   2: 42,919 ops/s
Iteration   3: 42,053 ops/s
Iteration   4: 42,308 ops/s
Iteration   5: 40,595 ops/s

# Run progress: 12,00% complete, ETA 00:36:50
# Fork: 4 of 5
# Warmup Iteration   1: 41,548 ops/s
# Warmup Iteration   2: 40,881 ops/s
# Warmup Iteration   3: 41,409 ops/s
# Warmup Iteration   4: 40,641 ops/s
# Warmup Iteration   5: 40,816 ops/s
Iteration   1: 41,960 ops/s
Iteration   2: 42,782 ops/s
Iteration   3: 41,992 ops/s
Iteration   4: 42,331 ops/s
Iteration   5: 40,625 ops/s

# Run progress: 16,00% complete, ETA 00:35:10
# Fork: 5 of 5
# Warmup Iteration   1: 41,943 ops/s
# Warmup Iteration   2: 42,026 ops/s
# Warmup Iteration   3: 42,074 ops/s
# Warmup Iteration   4: 42,313 ops/s
# Warmup Iteration   5: 42,134 ops/s
Iteration   1: 42,667 ops/s
Iteration   2: 42,861 ops/s
Iteration   3: 41,877 ops/s
Iteration   4: 42,119 ops/s
Iteration   5: 40,539 ops/s


Result "test.MyBenchmark.closure13FreeVariables3MillionCalls":
  41,958 ±(99.9%) 0,555 ops/s [Average]
  (min, avg, max) = (40,539, 41,958, 42,919), stdev = 0,741
  CI (99.9%): [41,403, 42,513] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+7-LTS
# VM invoker: /home/heckej/.sdkman/candidates/java/17.0.3.fx-librca/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: test.MyBenchmark.closure16FreeVariables3MillionCalls

# Run progress: 20,00% complete, ETA 00:33:29
# Fork: 1 of 5
# Warmup Iteration   1: 36,208 ops/s
# Warmup Iteration   2: 36,315 ops/s
# Warmup Iteration   3: 36,067 ops/s
# Warmup Iteration   4: 36,462 ops/s
# Warmup Iteration   5: 36,170 ops/s
Iteration   1: 36,588 ops/s
Iteration   2: 36,332 ops/s
Iteration   3: 36,982 ops/s
Iteration   4: 36,447 ops/s
Iteration   5: 36,380 ops/s

# Run progress: 24,00% complete, ETA 00:31:48
# Fork: 2 of 5
# Warmup Iteration   1: 36,092 ops/s
# Warmup Iteration   2: 36,595 ops/s
# Warmup Iteration   3: 36,640 ops/s
# Warmup Iteration   4: 36,670 ops/s
# Warmup Iteration   5: 36,984 ops/s
Iteration   1: 36,436 ops/s
Iteration   2: 36,721 ops/s
Iteration   3: 36,697 ops/s
Iteration   4: 36,175 ops/s
Iteration   5: 36,345 ops/s

# Run progress: 28,00% complete, ETA 00:30:08
# Fork: 3 of 5
# Warmup Iteration   1: 35,850 ops/s
# Warmup Iteration   2: 36,277 ops/s
# Warmup Iteration   3: 36,153 ops/s
# Warmup Iteration   4: 36,694 ops/s
# Warmup Iteration   5: 36,405 ops/s
Iteration   1: 36,559 ops/s
Iteration   2: 36,318 ops/s
Iteration   3: 36,640 ops/s
Iteration   4: 36,460 ops/s
Iteration   5: 36,633 ops/s

# Run progress: 32,00% complete, ETA 00:28:28
# Fork: 4 of 5
# Warmup Iteration   1: 35,830 ops/s
# Warmup Iteration   2: 36,287 ops/s
# Warmup Iteration   3: 36,157 ops/s
# Warmup Iteration   4: 36,696 ops/s
# Warmup Iteration   5: 36,406 ops/s
Iteration   1: 34,928 ops/s
Iteration   2: 36,264 ops/s
Iteration   3: 36,637 ops/s
Iteration   4: 36,529 ops/s
Iteration   5: 36,594 ops/s

# Run progress: 36,00% complete, ETA 00:26:47
# Fork: 5 of 5
# Warmup Iteration   1: 36,230 ops/s
# Warmup Iteration   2: 36,303 ops/s
# Warmup Iteration   3: 36,065 ops/s
# Warmup Iteration   4: 36,464 ops/s
# Warmup Iteration   5: 36,175 ops/s
Iteration   1: 36,595 ops/s
Iteration   2: 36,035 ops/s
Iteration   3: 36,979 ops/s
Iteration   4: 36,448 ops/s
Iteration   5: 36,986 ops/s


Result "test.MyBenchmark.closure16FreeVariables3MillionCalls":
  36,468 ±(99.9%) 0,298 ops/s [Average]
  (min, avg, max) = (34,928, 36,468, 36,986), stdev = 0,398
  CI (99.9%): [36,170, 36,767] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+7-LTS
# VM invoker: /home/heckej/.sdkman/candidates/java/17.0.3.fx-librca/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: test.MyBenchmark.closure2FreeVariables3MillionCalls

# Run progress: 40,00% complete, ETA 00:25:06
# Fork: 1 of 5
# Warmup Iteration   1: 57,454 ops/s
# Warmup Iteration   2: 57,559 ops/s
# Warmup Iteration   3: 55,385 ops/s
# Warmup Iteration   4: 58,547 ops/s
# Warmup Iteration   5: 58,219 ops/s
Iteration   1: 54,421 ops/s
Iteration   2: 57,266 ops/s
Iteration   3: 58,260 ops/s
Iteration   4: 57,946 ops/s
Iteration   5: 56,364 ops/s

# Run progress: 44,00% complete, ETA 00:23:26
# Fork: 2 of 5
# Warmup Iteration   1: 54,709 ops/s
# Warmup Iteration   2: 58,597 ops/s
# Warmup Iteration   3: 58,599 ops/s
# Warmup Iteration   4: 58,598 ops/s
# Warmup Iteration   5: 55,747 ops/s
Iteration   1: 58,045 ops/s
Iteration   2: 56,244 ops/s
Iteration   3: 58,600 ops/s
Iteration   4: 56,334 ops/s
Iteration   5: 57,561 ops/s

# Run progress: 48,00% complete, ETA 00:21:45
# Fork: 3 of 5
# Warmup Iteration   1: 57,421 ops/s
# Warmup Iteration   2: 57,547 ops/s
# Warmup Iteration   3: 55,377 ops/s
# Warmup Iteration   4: 58,545 ops/s
# Warmup Iteration   5: 58,198 ops/s
Iteration   1: 54,455 ops/s
Iteration   2: 57,278 ops/s
Iteration   3: 58,259 ops/s
Iteration   4: 57,944 ops/s
Iteration   5: 56,377 ops/s

# Run progress: 52,00% complete, ETA 00:20:05
# Fork: 4 of 5
# Warmup Iteration   1: 54,662 ops/s
# Warmup Iteration   2: 57,325 ops/s
# Warmup Iteration   3: 58,218 ops/s
# Warmup Iteration   4: 53,168 ops/s
# Warmup Iteration   5: 55,945 ops/s
Iteration   1: 57,962 ops/s
Iteration   2: 56,902 ops/s
Iteration   3: 58,600 ops/s
Iteration   4: 55,642 ops/s
Iteration   5: 57,791 ops/s

# Run progress: 56,00% complete, ETA 00:18:25
# Fork: 5 of 5
# Warmup Iteration   1: 54,715 ops/s
# Warmup Iteration   2: 58,599 ops/s
# Warmup Iteration   3: 58,599 ops/s
# Warmup Iteration   4: 58,600 ops/s
# Warmup Iteration   5: 55,696 ops/s
Iteration   1: 58,049 ops/s
Iteration   2: 56,252 ops/s
Iteration   3: 58,603 ops/s
Iteration   4: 56,324 ops/s
Iteration   5: 57,659 ops/s


Result "test.MyBenchmark.closure2FreeVariables3MillionCalls":
  57,165 ±(99.9%) 0,897 ops/s [Average]
  (min, avg, max) = (54,421, 57,165, 58,603), stdev = 1,197
  CI (99.9%): [56,269, 58,062] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+7-LTS
# VM invoker: /home/heckej/.sdkman/candidates/java/17.0.3.fx-librca/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: test.MyBenchmark.closure6FreeVariables3MillionCalls

# Run progress: 60,00% complete, ETA 00:16:44
# Fork: 1 of 5
# Warmup Iteration   1: 52,643 ops/s
# Warmup Iteration   2: 49,525 ops/s
# Warmup Iteration   3: 50,319 ops/s
# Warmup Iteration   4: 48,875 ops/s
# Warmup Iteration   5: 49,921 ops/s
Iteration   1: 47,862 ops/s
Iteration   2: 49,518 ops/s
Iteration   3: 49,787 ops/s
Iteration   4: 49,154 ops/s
Iteration   5: 49,411 ops/s

# Run progress: 64,00% complete, ETA 00:15:04
# Fork: 2 of 5
# Warmup Iteration   1: 51,022 ops/s
# Warmup Iteration   2: 49,404 ops/s
# Warmup Iteration   3: 49,921 ops/s
# Warmup Iteration   4: 49,574 ops/s
# Warmup Iteration   5: 49,073 ops/s
Iteration   1: 49,230 ops/s
Iteration   2: 49,165 ops/s
Iteration   3: 49,088 ops/s
Iteration   4: 50,176 ops/s
Iteration   5: 49,458 ops/s

# Run progress: 68,00% complete, ETA 00:13:23
# Fork: 3 of 5
# Warmup Iteration   1: 50,314 ops/s
# Warmup Iteration   2: 49,131 ops/s
# Warmup Iteration   3: 48,845 ops/s
# Warmup Iteration   4: 49,561 ops/s
# Warmup Iteration   5: 49,499 ops/s
Iteration   1: 49,321 ops/s
Iteration   2: 49,217 ops/s
Iteration   3: 48,881 ops/s
Iteration   4: 49,600 ops/s
Iteration   5: 49,444 ops/s

# Run progress: 72,00% complete, ETA 00:11:43
# Fork: 4 of 5
# Warmup Iteration   1: 52,432 ops/s
# Warmup Iteration   2: 49,216 ops/s
# Warmup Iteration   3: 49,102 ops/s
# Warmup Iteration   4: 49,882 ops/s
# Warmup Iteration   5: 49,967 ops/s
Iteration   1: 47,659 ops/s
Iteration   2: 49,691 ops/s
Iteration   3: 49,611 ops/s
Iteration   4: 48,926 ops/s
Iteration   5: 49,482 ops/s

# Run progress: 76,00% complete, ETA 00:10:02
# Fork: 5 of 5
# Warmup Iteration   1: 50,182 ops/s
# Warmup Iteration   2: 48,097 ops/s
# Warmup Iteration   3: 48,073 ops/s
# Warmup Iteration   4: 47,730 ops/s
# Warmup Iteration   5: 48,104 ops/s
Iteration   1: 49,191 ops/s
Iteration   2: 48,405 ops/s
Iteration   3: 48,035 ops/s
Iteration   4: 49,799 ops/s
Iteration   5: 46,646 ops/s


Result "test.MyBenchmark.closure6FreeVariables3MillionCalls":
  49,070 ±(99.9%) 0,593 ops/s [Average]
  (min, avg, max) = (46,646, 49,070, 50,176), stdev = 0,792
  CI (99.9%): [48,477, 49,663] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+7-LTS
# VM invoker: /home/heckej/.sdkman/candidates/java/17.0.3.fx-librca/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: test.MyBenchmark.closure9FreeVariables3MillionCalls

# Run progress: 80,00% complete, ETA 00:08:22
# Fork: 1 of 5
# Warmup Iteration   1: 47,313 ops/s
# Warmup Iteration   2: 47,505 ops/s
# Warmup Iteration   3: 48,121 ops/s
# Warmup Iteration   4: 48,003 ops/s
# Warmup Iteration   5: 47,562 ops/s
Iteration   1: 48,110 ops/s
Iteration   2: 47,478 ops/s
Iteration   3: 47,516 ops/s
Iteration   4: 48,109 ops/s
Iteration   5: 47,680 ops/s

# Run progress: 84,00% complete, ETA 00:06:41
# Fork: 2 of 5
# Warmup Iteration   1: 47,350 ops/s
# Warmup Iteration   2: 47,511 ops/s
# Warmup Iteration   3: 48,102 ops/s
# Warmup Iteration   4: 48,004 ops/s
# Warmup Iteration   5: 47,534 ops/s
Iteration   1: 48,111 ops/s
Iteration   2: 47,471 ops/s
Iteration   3: 47,522 ops/s
Iteration   4: 48,114 ops/s
Iteration   5: 47,683 ops/s

# Run progress: 88,00% complete, ETA 00:05:01
# Fork: 3 of 5
# Warmup Iteration   1: 47,218 ops/s
# Warmup Iteration   2: 48,080 ops/s
# Warmup Iteration   3: 48,107 ops/s
# Warmup Iteration   4: 47,486 ops/s
# Warmup Iteration   5: 47,691 ops/s
Iteration   1: 47,570 ops/s
Iteration   2: 48,102 ops/s
Iteration   3: 47,959 ops/s
Iteration   4: 47,412 ops/s
Iteration   5: 48,110 ops/s

# Run progress: 92,00% complete, ETA 00:03:20
# Fork: 4 of 5
# Warmup Iteration   1: 46,994 ops/s
# Warmup Iteration   2: 48,091 ops/s
# Warmup Iteration   3: 47,615 ops/s
# Warmup Iteration   4: 48,286 ops/s
# Warmup Iteration   5: 47,965 ops/s
Iteration   1: 47,509 ops/s
Iteration   2: 48,100 ops/s
Iteration   3: 47,863 ops/s
Iteration   4: 47,414 ops/s
Iteration   5: 47,275 ops/s

# Run progress: 96,00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 47,330 ops/s
# Warmup Iteration   2: 47,503 ops/s
# Warmup Iteration   3: 48,104 ops/s
# Warmup Iteration   4: 47,992 ops/s
# Warmup Iteration   5: 47,565 ops/s
Iteration   1: 48,106 ops/s
Iteration   2: 47,464 ops/s
Iteration   3: 47,505 ops/s
Iteration   4: 48,104 ops/s
Iteration   5: 47,709 ops/s


Result "test.MyBenchmark.closure9FreeVariables3MillionCalls":
  47,760 ±(99.9%) 0,225 ops/s [Average]
  (min, avg, max) = (47,275, 47,760, 48,114), stdev = 0,300
  CI (99.9%): [47,535, 47,984] (assumes normal distribution)


# Run complete. Total time: 00:41:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                         Mode  Cnt   Score   Error  Units
MyBenchmark.closure13FreeVariables3MillionCalls  thrpt   25  41,958 ± 0,555  ops/s
MyBenchmark.closure16FreeVariables3MillionCalls  thrpt   25  36,468 ± 0,298  ops/s
MyBenchmark.closure2FreeVariables3MillionCalls   thrpt   25  57,165 ± 0,897  ops/s
MyBenchmark.closure6FreeVariables3MillionCalls   thrpt   25  49,070 ± 0,593  ops/s
MyBenchmark.closure9FreeVariables3MillionCalls   thrpt   25  47,760 ± 0,225  ops/s

Benchmark result is saved to test-call-closure-2.6.9.13.16.csv
