# JMH version: 1.35
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+7-LTS
# VM invoker: /home/heckej/.sdkman/candidates/java/17.0.3.fx-librca/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: test.MyBenchmark.emptyClosure13Arguments3MillionCalls

# Run progress: 0,00% complete, ETA 00:41:40
# Fork: 1 of 5
# Warmup Iteration   1: 988979604,020 ops/s
# Warmup Iteration   2: 994066815,249 ops/s
# Warmup Iteration   3: 996229277,582 ops/s
# Warmup Iteration   4: 996340142,263 ops/s
# Warmup Iteration   5: 995978630,314 ops/s
Iteration   1: 996160470,643 ops/s
Iteration   2: 996262160,172 ops/s
Iteration   3: 996313338,470 ops/s
Iteration   4: 996339778,604 ops/s
Iteration   5: 996283740,000 ops/s

# Run progress: 4,00% complete, ETA 00:40:10
# Fork: 2 of 5
# Warmup Iteration   1: 990078943,356 ops/s
# Warmup Iteration   2: 995304745,888 ops/s
# Warmup Iteration   3: 996329229,314 ops/s
# Warmup Iteration   4: 996078772,083 ops/s
# Warmup Iteration   5: 996276200,891 ops/s
Iteration   1: 996306608,312 ops/s
Iteration   2: 996277953,584 ops/s
Iteration   3: 996337082,318 ops/s
Iteration   4: 996328887,520 ops/s
Iteration   5: 995964448,619 ops/s

# Run progress: 8,00% complete, ETA 00:38:28
# Fork: 3 of 5
# Warmup Iteration   1: 990128173,348 ops/s
# Warmup Iteration   2: 995248974,589 ops/s
# Warmup Iteration   3: 996310102,811 ops/s
# Warmup Iteration   4: 996312700,698 ops/s
# Warmup Iteration   5: 996295384,856 ops/s
Iteration   1: 995859346,517 ops/s
Iteration   2: 995266279,968 ops/s
Iteration   3: 996336371,526 ops/s
Iteration   4: 996339561,791 ops/s
Iteration   5: 996287731,479 ops/s

# Run progress: 12,00% complete, ETA 00:36:47
# Fork: 4 of 5
# Warmup Iteration   1: 990260422,121 ops/s
# Warmup Iteration   2: 995099236,870 ops/s
# Warmup Iteration   3: 996323704,500 ops/s
# Warmup Iteration   4: 996287013,294 ops/s
# Warmup Iteration   5: 996142803,445 ops/s
Iteration   1: 996311832,280 ops/s
Iteration   2: 996295908,802 ops/s
Iteration   3: 996299846,617 ops/s
Iteration   4: 996324308,972 ops/s
Iteration   5: 996320555,871 ops/s

# Run progress: 16,00% complete, ETA 00:35:07
# Fork: 5 of 5
# Warmup Iteration   1: 990230732,632 ops/s
# Warmup Iteration   2: 995258729,319 ops/s
# Warmup Iteration   3: 996301155,002 ops/s
# Warmup Iteration   4: 996277826,810 ops/s
# Warmup Iteration   5: 996228978,064 ops/s
Iteration   1: 996324950,937 ops/s
Iteration   2: 996250908,168 ops/s
Iteration   3: 996280157,576 ops/s
Iteration   4: 996263321,987 ops/s
Iteration   5: 996305202,721 ops/s


Result "test.MyBenchmark.emptyClosure13Arguments3MillionCalls":
  996225630,138 ±(99.9%) 172433,955 ops/s [Average]
  (min, avg, max) = (995266279,968, 996225630,138, 996339778,604), stdev = 230194,397
  CI (99.9%): [996053196,183, 996398064,094] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+7-LTS
# VM invoker: /home/heckej/.sdkman/candidates/java/17.0.3.fx-librca/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: test.MyBenchmark.emptyClosure16Arguments3MillionCalls

# Run progress: 20,00% complete, ETA 00:33:26
# Fork: 1 of 5
# Warmup Iteration   1: 9,929 ops/s
# Warmup Iteration   2: 10,006 ops/s
# Warmup Iteration   3: 10,051 ops/s
# Warmup Iteration   4: 10,110 ops/s
# Warmup Iteration   5: 10,109 ops/s
Iteration   1: 10,105 ops/s
Iteration   2: 10,116 ops/s
Iteration   3: 10,114 ops/s
Iteration   4: 10,116 ops/s
Iteration   5: 10,111 ops/s

# Run progress: 24,00% complete, ETA 00:31:49
# Fork: 2 of 5
# Warmup Iteration   1: 9,953 ops/s
# Warmup Iteration   2: 10,004 ops/s
# Warmup Iteration   3: 10,050 ops/s
# Warmup Iteration   4: 10,106 ops/s
# Warmup Iteration   5: 10,106 ops/s
Iteration   1: 10,113 ops/s
Iteration   2: 10,109 ops/s
Iteration   3: 10,108 ops/s
Iteration   4: 10,109 ops/s
Iteration   5: 10,107 ops/s

# Run progress: 28,00% complete, ETA 00:30:10
# Fork: 3 of 5
# Warmup Iteration   1: 9,947 ops/s
# Warmup Iteration   2: 10,006 ops/s
# Warmup Iteration   3: 10,050 ops/s
# Warmup Iteration   4: 10,106 ops/s
# Warmup Iteration   5: 10,108 ops/s
Iteration   1: 10,110 ops/s
Iteration   2: 10,107 ops/s
Iteration   3: 10,111 ops/s
Iteration   4: 10,047 ops/s
Iteration   5: 10,105 ops/s

# Run progress: 32,00% complete, ETA 00:28:31
# Fork: 4 of 5
# Warmup Iteration   1: 9,958 ops/s
# Warmup Iteration   2: 10,004 ops/s
# Warmup Iteration   3: 10,051 ops/s
# Warmup Iteration   4: 10,112 ops/s
# Warmup Iteration   5: 10,112 ops/s
Iteration   1: 10,108 ops/s
Iteration   2: 10,101 ops/s
Iteration   3: 10,101 ops/s
Iteration   4: 10,103 ops/s
Iteration   5: 10,102 ops/s

# Run progress: 36,00% complete, ETA 00:26:51
# Fork: 5 of 5
# Warmup Iteration   1: 9,949 ops/s
# Warmup Iteration   2: 10,003 ops/s
# Warmup Iteration   3: 10,051 ops/s
# Warmup Iteration   4: 10,108 ops/s
# Warmup Iteration   5: 10,108 ops/s
Iteration   1: 10,109 ops/s
Iteration   2: 10,111 ops/s
Iteration   3: 10,108 ops/s
Iteration   4: 10,110 ops/s
Iteration   5: 10,110 ops/s


Result "test.MyBenchmark.emptyClosure16Arguments3MillionCalls":
  10,106 ±(99.9%) 0,010 ops/s [Average]
  (min, avg, max) = (10,047, 10,106, 10,116), stdev = 0,013
  CI (99.9%): [10,096, 10,116] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+7-LTS
# VM invoker: /home/heckej/.sdkman/candidates/java/17.0.3.fx-librca/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: test.MyBenchmark.emptyClosure2Arguments3MillionCalls

# Run progress: 40,00% complete, ETA 00:25:11
# Fork: 1 of 5
# Warmup Iteration   1: 993121834,729 ops/s
# Warmup Iteration   2: 995314838,646 ops/s
# Warmup Iteration   3: 996289045,144 ops/s
# Warmup Iteration   4: 996282161,780 ops/s
# Warmup Iteration   5: 996336228,279 ops/s
Iteration   1: 996304394,012 ops/s
Iteration   2: 996293840,030 ops/s
Iteration   3: 996269593,019 ops/s
Iteration   4: 996321176,025 ops/s
Iteration   5: 996302639,959 ops/s

# Run progress: 44,00% complete, ETA 00:23:30
# Fork: 2 of 5
# Warmup Iteration   1: 993345102,353 ops/s
# Warmup Iteration   2: 994230572,191 ops/s
# Warmup Iteration   3: 996263232,065 ops/s
# Warmup Iteration   4: 996295067,926 ops/s
# Warmup Iteration   5: 994292323,167 ops/s
Iteration   1: 955941310,758 ops/s
Iteration   2: 995970693,248 ops/s
Iteration   3: 996114010,563 ops/s
Iteration   4: 996044717,847 ops/s
Iteration   5: 996307090,354 ops/s

# Run progress: 48,00% complete, ETA 00:21:48
# Fork: 3 of 5
# Warmup Iteration   1: 993031137,726 ops/s
# Warmup Iteration   2: 995139567,093 ops/s
# Warmup Iteration   3: 996319053,393 ops/s
# Warmup Iteration   4: 996295172,501 ops/s
# Warmup Iteration   5: 996259732,953 ops/s
Iteration   1: 996300896,355 ops/s
Iteration   2: 996300509,867 ops/s
Iteration   3: 996327573,597 ops/s
Iteration   4: 996338210,248 ops/s
Iteration   5: 996322670,088 ops/s

# Run progress: 52,00% complete, ETA 00:20:07
# Fork: 4 of 5
# Warmup Iteration   1: 993292056,222 ops/s
# Warmup Iteration   2: 994332386,018 ops/s
# Warmup Iteration   3: 996296131,174 ops/s
# Warmup Iteration   4: 996190729,532 ops/s
# Warmup Iteration   5: 996313019,155 ops/s
Iteration   1: 996256241,278 ops/s
Iteration   2: 996259562,690 ops/s
Iteration   3: 996240553,329 ops/s
Iteration   4: 996329663,240 ops/s
Iteration   5: 996301119,438 ops/s

# Run progress: 56,00% complete, ETA 00:18:27
# Fork: 5 of 5
# Warmup Iteration   1: 993070783,548 ops/s
# Warmup Iteration   2: 994165736,660 ops/s
# Warmup Iteration   3: 996288123,072 ops/s
# Warmup Iteration   4: 996293055,221 ops/s
# Warmup Iteration   5: 996190883,527 ops/s
Iteration   1: 996238651,469 ops/s
Iteration   2: 996018145,047 ops/s
Iteration   3: 996123504,510 ops/s
Iteration   4: 996277952,466 ops/s
Iteration   5: 996139863,256 ops/s


Result "test.MyBenchmark.emptyClosure2Arguments3MillionCalls":
  994625783,308 ±(99.9%) 6037550,118 ops/s [Average]
  (min, avg, max) = (955941310,758, 994625783,308, 996338210,248), stdev = 8059956,672
  CI (99.9%): [988588233,190, 1000663333,426] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+7-LTS
# VM invoker: /home/heckej/.sdkman/candidates/java/17.0.3.fx-librca/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: test.MyBenchmark.emptyClosure6Arguments3MillionCalls

# Run progress: 60,00% complete, ETA 00:16:46
# Fork: 1 of 5
# Warmup Iteration   1: 992099632,617 ops/s
# Warmup Iteration   2: 994895960,748 ops/s
# Warmup Iteration   3: 996323151,384 ops/s
# Warmup Iteration   4: 996298348,323 ops/s
# Warmup Iteration   5: 996305502,257 ops/s
Iteration   1: 996326392,545 ops/s
Iteration   2: 996262913,192 ops/s
Iteration   3: 996158116,796 ops/s
Iteration   4: 996337917,206 ops/s
Iteration   5: 996298735,743 ops/s

# Run progress: 64,00% complete, ETA 00:15:05
# Fork: 2 of 5
# Warmup Iteration   1: 992167172,519 ops/s
# Warmup Iteration   2: 992445299,097 ops/s
# Warmup Iteration   3: 996332633,268 ops/s
# Warmup Iteration   4: 996290379,995 ops/s
# Warmup Iteration   5: 996321462,536 ops/s
Iteration   1: 996327453,201 ops/s
Iteration   2: 996268695,385 ops/s
Iteration   3: 996241151,845 ops/s
Iteration   4: 996148117,005 ops/s
Iteration   5: 996303694,536 ops/s

# Run progress: 68,00% complete, ETA 00:13:24
# Fork: 3 of 5
# Warmup Iteration   1: 992037747,152 ops/s
# Warmup Iteration   2: 994754296,725 ops/s
# Warmup Iteration   3: 996312794,123 ops/s
# Warmup Iteration   4: 996290892,634 ops/s
# Warmup Iteration   5: 996330903,922 ops/s
Iteration   1: 996205082,898 ops/s
Iteration   2: 996261202,454 ops/s
Iteration   3: 996298390,496 ops/s
Iteration   4: 996316478,539 ops/s
Iteration   5: 996313861,410 ops/s

# Run progress: 72,00% complete, ETA 00:11:43
# Fork: 4 of 5
# Warmup Iteration   1: 992160563,109 ops/s
# Warmup Iteration   2: 995420534,463 ops/s
# Warmup Iteration   3: 996303129,981 ops/s
# Warmup Iteration   4: 996300755,640 ops/s
# Warmup Iteration   5: 996264678,300 ops/s
Iteration   1: 996283353,782 ops/s
Iteration   2: 996306570,577 ops/s
Iteration   3: 996324084,790 ops/s
Iteration   4: 996324476,258 ops/s
Iteration   5: 996301275,283 ops/s

# Run progress: 76,00% complete, ETA 00:10:03
# Fork: 5 of 5
# Warmup Iteration   1: 991296308,040 ops/s
# Warmup Iteration   2: 994903438,423 ops/s
# Warmup Iteration   3: 996315109,758 ops/s
# Warmup Iteration   4: 996223450,339 ops/s
# Warmup Iteration   5: 996324230,814 ops/s
Iteration   1: 996314728,580 ops/s
Iteration   2: 996268351,987 ops/s
Iteration   3: 996265645,831 ops/s
Iteration   4: 996314194,227 ops/s
Iteration   5: 996311199,310 ops/s


Result "test.MyBenchmark.emptyClosure6Arguments3MillionCalls":
  996283283,355 ±(99.9%) 37498,383 ops/s [Average]
  (min, avg, max) = (996148117,005, 996283283,355, 996337917,206), stdev = 50059,269
  CI (99.9%): [996245784,972, 996320781,738] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.3, OpenJDK 64-Bit Server VM, 17.0.3+7-LTS
# VM invoker: /home/heckej/.sdkman/candidates/java/17.0.3.fx-librca/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: test.MyBenchmark.emptyClosure9Arguments3MillionCalls

# Run progress: 80,00% complete, ETA 00:08:22
# Fork: 1 of 5
# Warmup Iteration   1: 991421519,279 ops/s
# Warmup Iteration   2: 993068554,119 ops/s
# Warmup Iteration   3: 996290349,571 ops/s
# Warmup Iteration   4: 996282783,745 ops/s
# Warmup Iteration   5: 996321084,398 ops/s
Iteration   1: 996313439,201 ops/s
Iteration   2: 996309494,046 ops/s
Iteration   3: 996311277,307 ops/s
Iteration   4: 996312683,608 ops/s
Iteration   5: 996319439,754 ops/s

# Run progress: 84,00% complete, ETA 00:06:42
# Fork: 2 of 5
# Warmup Iteration   1: 991387493,632 ops/s
# Warmup Iteration   2: 995397773,563 ops/s
# Warmup Iteration   3: 996327472,532 ops/s
# Warmup Iteration   4: 996309540,504 ops/s
# Warmup Iteration   5: 996314529,017 ops/s
Iteration   1: 996305695,815 ops/s
Iteration   2: 996317697,171 ops/s
Iteration   3: 996331426,409 ops/s
Iteration   4: 996323416,186 ops/s
Iteration   5: 996293496,947 ops/s

# Run progress: 88,00% complete, ETA 00:05:01
# Fork: 3 of 5
# Warmup Iteration   1: 991203594,154 ops/s
# Warmup Iteration   2: 993124976,704 ops/s
# Warmup Iteration   3: 996338098,681 ops/s
# Warmup Iteration   4: 996294352,878 ops/s
# Warmup Iteration   5: 996325606,461 ops/s
Iteration   1: 996318506,754 ops/s
Iteration   2: 996242905,011 ops/s
Iteration   3: 996287537,286 ops/s
Iteration   4: 996015914,797 ops/s
Iteration   5: 996287645,183 ops/s

# Run progress: 92,00% complete, ETA 00:03:21
# Fork: 4 of 5
# Warmup Iteration   1: 991303937,558 ops/s
# Warmup Iteration   2: 994213760,004 ops/s
# Warmup Iteration   3: 996319123,409 ops/s
# Warmup Iteration   4: 996287482,511 ops/s
# Warmup Iteration   5: 996312051,906 ops/s
Iteration   1: 996179533,924 ops/s
Iteration   2: 996104376,084 ops/s
Iteration   3: 996263648,859 ops/s
Iteration   4: 996317179,084 ops/s
Iteration   5: 996264427,759 ops/s

# Run progress: 96,00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 991510182,532 ops/s
# Warmup Iteration   2: 994946203,331 ops/s
# Warmup Iteration   3: 996335809,139 ops/s
# Warmup Iteration   4: 996144860,949 ops/s
# Warmup Iteration   5: 996283439,098 ops/s
Iteration   1: 996317146,898 ops/s
Iteration   2: 996307257,393 ops/s
Iteration   3: 996324084,761 ops/s
Iteration   4: 996338227,225 ops/s
Iteration   5: 996295441,987 ops/s


Result "test.MyBenchmark.emptyClosure9Arguments3MillionCalls":
  996280075,978 ±(99.9%) 56310,392 ops/s [Average]
  (min, avg, max) = (996015914,797, 996280075,978, 996338227,225), stdev = 75172,762
  CI (99.9%): [996223765,586, 996336386,370] (assumes normal distribution)


# Run complete. Total time: 00:41:52

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                          Mode  Cnt          Score         Error  Units
MyBenchmark.emptyClosure13Arguments3MillionCalls  thrpt   25  996225630,138 ±  172433,955  ops/s
MyBenchmark.emptyClosure16Arguments3MillionCalls  thrpt   25         10,106 ±       0,010  ops/s
MyBenchmark.emptyClosure2Arguments3MillionCalls   thrpt   25  994625783,308 ± 6037550,118  ops/s
MyBenchmark.emptyClosure6Arguments3MillionCalls   thrpt   25  996283283,355 ±   37498,383  ops/s
MyBenchmark.emptyClosure9Arguments3MillionCalls   thrpt   25  996280075,978 ±   56310,392  ops/s

Benchmark result is saved to test-call-2.6.9.13.16.csv
